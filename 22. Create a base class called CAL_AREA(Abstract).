22. Create a base class called CAL_AREA(Abstract). Use this class to store float type values that could be used to compute the volume of figures. Derive two specific classes called cone, hemisphere and cylinder from the base CAL_AREA. Add to the base class, a member function getdata ( ) to initialize base class data members and another member function display volume( ) to compute and display the volume of figures. Make display volume ( ) as a pure virtual function and redefine this function in the derived classes to suit their requirements. Using these three classes, design a program that will accept dimensions of a cone, cylinder and hemisphere interactively and display the volumes. Remember values given as input will be and used as follows: Volume of cone = (1/3)πr2h Volume of hemisphere = (2/3)πr3 Volume of cylinder = πr2h.
#include <iostream>
#include <cmath>

// Abstract base class
class CAL_AREA {
protected:
    float radius;
    float height;

public:
    // Pure virtual function to compute and display the volume
    virtual void display_volume() const = 0;

    // Member function to initialize base class data members
    void get_data() {
        std::cout << "Enter the dimensions:" << std::endl;
        std::cout << "Radius: ";
        std::cin >> radius;
        std::cout << "Height: ";
        std::cin >> height;
    }
};

// Derived class for Cone
class Cone : public CAL_AREA {
public:
    // Redefine the display_volume() function for Cone
    void display_volume() const override {
        float volume = (1.0 / 3.0) * M_PI * std::pow(radius, 2) * height;
        std::cout << "Volume of Cone: " << volume << std::endl;
    }
};

// Derived class for Hemisphere
class Hemisphere : public CAL_AREA {
public:
    // Redefine the display_volume() function for Hemisphere
    void display_volume() const override {
        float volume = (2.0 / 3.0) * M_PI * std::pow(radius, 3);
        std::cout << "Volume of Hemisphere: " << volume << std::endl;
    }
};

// Derived class for Cylinder
class Cylinder : public CAL_AREA {
public:
    // Redefine the display_volume() function for Cylinder
    void display_volume() const override {
        float volume = M_PI * std::pow(radius, 2) * height;
        std::cout << "Volume of Cylinder: " << volume << std::endl;
    }
};

int main() {
    CAL_AREA* shapePtr; // Pointer to the base class

    int choice;
    std::cout << "Enter the shape (1 for Cone, 2 for Hemisphere, 3 for Cylinder): ";
    std::cin >> choice;

    if (choice == 1) {
        Cone cone;
        shapePtr = &cone;
    } else if (choice == 2) {
        Hemisphere hemisphere;
        shapePtr = &hemisphere;
    } else if (choice == 3) {
        Cylinder cylinder;
        shapePtr = &cylinder;
    } else {
        std::cout << "Invalid choice!" << std::endl;
        return 1;
    }

    // Get data and display volume
    shapePtr->get_data();
    shapePtr->display_volume();

    return 0;
}
